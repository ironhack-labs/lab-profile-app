{"ast":null,"code":"import axios from 'axios';\nvar base_url = \"http://localhost:3000\"; // signup that makes a POST request to the auth/signup route passing username, password, campus and course info,\n\nexport var signup = function signup(auth) {\n  console.log(auth);\n  axios.post(\"\".concat(base_url, \"/auth/signup\"), auth).then(function (res) {\n    console.log(res);\n  }).catch(function (err) {\n    console.error(err);\n  });\n};\nconsole.log(); // login that makes a POST request to the auth/login route passing username and password,\n\nexport var login = function login(auth, history) {\n  axios.post(\"\".concat(base_url, \"/auth/login\"), auth).then(function (res) {\n    localStorage.setItem(\"token\", res.data.token);\n    localStorage.setItem(\"user\", JSON.stringify(res.data.user));\n    history.push(\"/profile/\".concat(res.data.user._id));\n  }).catch(function (err) {\n    console.error(err);\n  });\n}; // upload that makes a PATCH request to the auth/upload route passing the file,\n\nexport var update = function update(id, form) {\n  var formData = new FormData();\n  Object.keys(form).forEach(function (key) {\n    formData.append(key, form[key]);\n  });\n  axios.patch(\"\".concat(base_url, \"/auth/upload/\").concat(id), formData, {\n    headers: {\n      \"Content-Type\": \"multipart/form-data\"\n    }\n  }).then(function (user) {\n    console.log(user);\n  });\n}; // edit that makes a PATCH request to the auth/edit route passing username, campus and course,\n\nexport var edit = function edit(user, auth, history) {\n  axios.patch(\"\".concat(base_url, \"/auth/edit/\").concat(user._id), auth).then(function (res) {\n    history.push(\"/profile/\".concat(user._id));\n  }).catch(function (err) {\n    console.error(err);\n  });\n}; // logout that makes a GET request to the auth/logout route to destroy user session,\n\nexport var logout = function logout() {\n  localStorage.removeItem(\"token\");\n}; // loggedin that makes a GET request to the auth/loggedin route to check if a user is logged in.","map":{"version":3,"sources":["/home/schaum/code/semana19/lab-profile-app/ironprofile/src/service.js"],"names":["axios","base_url","signup","auth","console","log","post","then","res","catch","err","error","login","history","localStorage","setItem","data","token","JSON","stringify","user","push","_id","update","id","form","formData","FormData","Object","keys","forEach","key","append","patch","headers","edit","logout","removeItem"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,IAAMC,QAAQ,GAAG,uBAAjB,C,CAEA;;AAGA,OAAO,IAAMC,MAAM,GAAG,SAATA,MAAS,CAACC,IAAD,EAAU;AAC5BC,EAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACAH,EAAAA,KAAK,CAACM,IAAN,WAAcL,QAAd,mBAAqCE,IAArC,EACKI,IADL,CACU,UAAAC,GAAG,EAAG;AACRJ,IAAAA,OAAO,CAACC,GAAR,CAAYG,GAAZ;AAEH,GAJL,EAKKC,KALL,CAKY,UAAAC,GAAG,EAAI;AACXN,IAAAA,OAAO,CAACO,KAAR,CAAcD,GAAd;AACH,GAPL;AAQH,CAVM;AAYPN,OAAO,CAACC,GAAR,G,CAEA;;AAEA,OAAO,IAAMO,KAAK,GAAG,SAARA,KAAQ,CAACT,IAAD,EAAMU,OAAN,EAAkB;AACnCb,EAAAA,KAAK,CAACM,IAAN,WAAcL,QAAd,kBAAqCE,IAArC,EACKI,IADL,CACU,UAAAC,GAAG,EAAI;AACTM,IAAAA,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA8BP,GAAG,CAACQ,IAAJ,CAASC,KAAvC;AACAH,IAAAA,YAAY,CAACC,OAAb,CAAqB,MAArB,EAA6BG,IAAI,CAACC,SAAL,CAAeX,GAAG,CAACQ,IAAJ,CAASI,IAAxB,CAA7B;AACAP,IAAAA,OAAO,CAACQ,IAAR,oBAAyBb,GAAG,CAACQ,IAAJ,CAASI,IAAT,CAAcE,GAAvC;AACH,GALL,EAMKb,KANL,CAMW,UAAAC,GAAG,EAAI;AACVN,IAAAA,OAAO,CAACO,KAAR,CAAcD,GAAd;AACH,GARL;AASH,CAVM,C,CAcP;;AAEA,OAAO,IAAMa,MAAM,GAAG,SAATA,MAAS,CAACC,EAAD,EAAKC,IAAL,EAAc;AAChC,MAAIC,QAAQ,GAAG,IAAIC,QAAJ,EAAf;AACAC,EAAAA,MAAM,CAACC,IAAP,CAAYJ,IAAZ,EAAkBK,OAAlB,CAA0B,UAAAC,GAAG,EAAI;AAC/BL,IAAAA,QAAQ,CAACM,MAAT,CAAgBD,GAAhB,EAAqBN,IAAI,CAACM,GAAD,CAAzB;AACD,GAFD;AAGA/B,EAAAA,KAAK,CAACiC,KAAN,WAAehC,QAAf,0BAAuCuB,EAAvC,GAA4CE,QAA5C,EAAqD;AACjDQ,IAAAA,OAAO,EAAE;AACL,sBAAiB;AADZ;AADwC,GAArD,EAKK3B,IALL,CAKU,UAAAa,IAAI,EAAI;AACVhB,IAAAA,OAAO,CAACC,GAAR,CAAYe,IAAZ;AACH,GAPL;AAQH,CAbM,C,CAmBP;;AACA,OAAO,IAAMe,IAAI,GAAG,SAAPA,IAAO,CAACf,IAAD,EAAMjB,IAAN,EAAWU,OAAX,EAAuB;AACvCb,EAAAA,KAAK,CAACiC,KAAN,WAAehC,QAAf,wBAAqCmB,IAAI,CAACE,GAA1C,GAAgDnB,IAAhD,EACKI,IADL,CACU,UAAAC,GAAG,EAAG;AACRK,IAAAA,OAAO,CAACQ,IAAR,oBAAyBD,IAAI,CAACE,GAA9B;AACH,GAHL,EAIKb,KAJL,CAIY,UAAAC,GAAG,EAAI;AACXN,IAAAA,OAAO,CAACO,KAAR,CAAcD,GAAd;AACH,GANL;AAOH,CARM,C,CAYP;;AAEA,OAAO,IAAM0B,MAAM,GAAG,SAATA,MAAS,GAAM;AACxBtB,EAAAA,YAAY,CAACuB,UAAb,CAAwB,OAAxB;AACH,CAFM,C,CAIP","sourcesContent":["import axios from 'axios';\n\nconst base_url = \"http://localhost:3000\"\n\n// signup that makes a POST request to the auth/signup route passing username, password, campus and course info,\n\n\nexport const signup = (auth) => {\n    console.log(auth)\n    axios.post(`${base_url}/auth/signup`,auth)\n        .then(res=> {\n            console.log(res)\n            \n        })\n        .catch (err => {\n            console.error(err);\n        })\n}\n\nconsole.log();\n\n// login that makes a POST request to the auth/login route passing username and password,\n\nexport const login = (auth,history) => {\n    axios.post(`${base_url}/auth/login`, auth)\n        .then(res => {\n            localStorage.setItem(\"token\", res.data.token);\n            localStorage.setItem(\"user\", JSON.stringify(res.data.user));\n            history.push(`/profile/${res.data.user._id}`);\n        })\n        .catch(err => {\n            console.error(err);\n        })\n};\n\n\n\n// upload that makes a PATCH request to the auth/upload route passing the file,\n\nexport const update = (id, form) => {\n    let formData = new FormData();\n    Object.keys(form).forEach(key => {\n      formData.append(key, form[key])\n    });\n    axios.patch(`${base_url}/auth/upload/${id}`,formData,{\n        headers: {\n            \"Content-Type\" : \"multipart/form-data\"\n        }\n    })\n        .then(user => {\n            console.log(user);\n        })\n};\n\n\n\n\n\n// edit that makes a PATCH request to the auth/edit route passing username, campus and course,\nexport const edit = (user,auth,history) => {\n    axios.patch(`${base_url}/auth/edit/${user._id}`,auth)\n        .then(res=> {\n            history.push(`/profile/${user._id}`)\n        })\n        .catch (err => {\n            console.error(err);\n        })\n}\n\n\n\n// logout that makes a GET request to the auth/logout route to destroy user session,\n\nexport const logout = () => {\n    localStorage.removeItem(\"token\")\n}\n\n// loggedin that makes a GET request to the auth/loggedin route to check if a user is logged in.\n"]},"metadata":{},"sourceType":"module"}