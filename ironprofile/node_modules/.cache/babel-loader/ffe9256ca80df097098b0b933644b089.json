{"ast":null,"code":"import axios from 'axios';\nvar base_url = \"http://localhost:3000/api\"; // signup that makes a POST request to the auth/signup route passing username, password, campus and course info,\n\nvar auth = {\n  username: \"bla\",\n  password: \"bla\",\n  campus: \"CDMX\",\n  course: \"webdev\"\n};\nexport var signup = function signup(auth, history) {\n  axios.post(\"\".concat(base_url, \"/auth/signup\"), auth).then(function (res) {\n    history.push(\"/login\");\n  }).catch(function (err) {\n    console.error(err);\n  });\n};\nconsole.log(\"hola\"); // login that makes a POST request to the auth/login route passing username and password,\n\nexport var login = function login(auth, history) {\n  axios.post(\"\".concat(base_url, \"/auth/login\"), auth).then(function (res) {\n    localStorage.setItem(\"token\", res.data.token);\n    localStorage.setItem(\"user\", JSON.stringify(res.data.user));\n    history.push(\"/profile/\".concat(res.data.user._id));\n  }).catch(function (err) {\n    console.error(err);\n  });\n}; // upload that makes a PATCH request to the auth/upload route passing the file,\n\nexport var update = function update(id, form) {\n  var formData = new FormData();\n  Object.keys(form).forEach(function (key) {\n    formData.append(key, form[key]);\n  });\n  axios.patch(\"\".concat(base_url, \"/auth/upload/\").concat(id), formData, {\n    headers: {\n      \"Content-Type\": \"multipart/form-data\"\n    }\n  }).then(function (user) {\n    console.log(user);\n  });\n}; // edit that makes a PATCH request to the auth/edit route passing username, campus and course,\n\nexport var edit = function edit(user, auth, history) {\n  axios.patch(\"\".concat(base_url, \"/auth/edit/\").concat(user._id), auth).then(function (res) {\n    history.push(\"/profile/\".concat(user._id));\n  }).catch(function (err) {\n    console.error(err);\n  });\n}; // logout that makes a GET request to the auth/logout route to destroy user session,\n\nexport var logout = function logout() {\n  localStorage.removeItem(\"token\");\n}; // loggedin that makes a GET request to the auth/loggedin route to check if a user is logged in.","map":{"version":3,"sources":["/home/schaum/code/semana19/lab-profile-app/ironprofile/src/service.js"],"names":["axios","base_url","auth","username","password","campus","course","signup","history","post","then","res","push","catch","err","console","error","log","login","localStorage","setItem","data","token","JSON","stringify","user","_id","update","id","form","formData","FormData","Object","keys","forEach","key","append","patch","headers","edit","logout","removeItem"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,IAAMC,QAAQ,GAAG,2BAAjB,C,CAEA;;AAEA,IAAMC,IAAI,GAAG;AAACC,EAAAA,QAAQ,EAAE,KAAX;AAAkBC,EAAAA,QAAQ,EAAE,KAA5B;AAAmCC,EAAAA,MAAM,EAAE,MAA3C;AAAmDC,EAAAA,MAAM,EAAC;AAA1D,CAAb;AAEA,OAAO,IAAMC,MAAM,GAAG,SAATA,MAAS,CAACL,IAAD,EAAMM,OAAN,EAAkB;AACpCR,EAAAA,KAAK,CAACS,IAAN,WAAcR,QAAd,mBAAqCC,IAArC,EACKQ,IADL,CACU,UAAAC,GAAG,EAAG;AACRH,IAAAA,OAAO,CAACI,IAAR;AACH,GAHL,EAIKC,KAJL,CAIY,UAAAC,GAAG,EAAI;AACXC,IAAAA,OAAO,CAACC,KAAR,CAAcF,GAAd;AACH,GANL;AAOH,CARM;AAUPC,OAAO,CAACE,GAAR,CAAY,MAAZ,E,CAEA;;AAEA,OAAO,IAAMC,KAAK,GAAG,SAARA,KAAQ,CAAChB,IAAD,EAAMM,OAAN,EAAkB;AACnCR,EAAAA,KAAK,CAACS,IAAN,WAAcR,QAAd,kBAAqCC,IAArC,EACKQ,IADL,CACU,UAAAC,GAAG,EAAI;AACTQ,IAAAA,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA8BT,GAAG,CAACU,IAAJ,CAASC,KAAvC;AACAH,IAAAA,YAAY,CAACC,OAAb,CAAqB,MAArB,EAA6BG,IAAI,CAACC,SAAL,CAAeb,GAAG,CAACU,IAAJ,CAASI,IAAxB,CAA7B;AACAjB,IAAAA,OAAO,CAACI,IAAR,oBAAyBD,GAAG,CAACU,IAAJ,CAASI,IAAT,CAAcC,GAAvC;AACH,GALL,EAMKb,KANL,CAMW,UAAAC,GAAG,EAAI;AACVC,IAAAA,OAAO,CAACC,KAAR,CAAcF,GAAd;AACH,GARL;AASH,CAVM,C,CAcP;;AAEA,OAAO,IAAMa,MAAM,GAAG,SAATA,MAAS,CAACC,EAAD,EAAKC,IAAL,EAAc;AAChC,MAAIC,QAAQ,GAAG,IAAIC,QAAJ,EAAf;AACAC,EAAAA,MAAM,CAACC,IAAP,CAAYJ,IAAZ,EAAkBK,OAAlB,CAA0B,UAAAC,GAAG,EAAI;AAC/BL,IAAAA,QAAQ,CAACM,MAAT,CAAgBD,GAAhB,EAAqBN,IAAI,CAACM,GAAD,CAAzB;AACD,GAFD;AAGAnC,EAAAA,KAAK,CAACqC,KAAN,WAAepC,QAAf,0BAAuC2B,EAAvC,GAA4CE,QAA5C,EAAqD;AACjDQ,IAAAA,OAAO,EAAE;AACL,sBAAiB;AADZ;AADwC,GAArD,EAKK5B,IALL,CAKU,UAAAe,IAAI,EAAI;AACVV,IAAAA,OAAO,CAACE,GAAR,CAAYQ,IAAZ;AACH,GAPL;AAQH,CAbM,C,CAmBP;;AACA,OAAO,IAAMc,IAAI,GAAG,SAAPA,IAAO,CAACd,IAAD,EAAMvB,IAAN,EAAWM,OAAX,EAAuB;AACvCR,EAAAA,KAAK,CAACqC,KAAN,WAAepC,QAAf,wBAAqCwB,IAAI,CAACC,GAA1C,GAAgDxB,IAAhD,EACKQ,IADL,CACU,UAAAC,GAAG,EAAG;AACRH,IAAAA,OAAO,CAACI,IAAR,oBAAyBa,IAAI,CAACC,GAA9B;AACH,GAHL,EAIKb,KAJL,CAIY,UAAAC,GAAG,EAAI;AACXC,IAAAA,OAAO,CAACC,KAAR,CAAcF,GAAd;AACH,GANL;AAOH,CARM,C,CAYP;;AAEA,OAAO,IAAM0B,MAAM,GAAG,SAATA,MAAS,GAAM;AACxBrB,EAAAA,YAAY,CAACsB,UAAb,CAAwB,OAAxB;AACH,CAFM,C,CAIP","sourcesContent":["import axios from 'axios';\n\nconst base_url = \"http://localhost:3000/api\"\n\n// signup that makes a POST request to the auth/signup route passing username, password, campus and course info,\n\nconst auth = {username: \"bla\", password: \"bla\", campus: \"CDMX\", course:\"webdev\"}\n\nexport const signup = (auth,history) => {\n    axios.post(`${base_url}/auth/signup`,auth)\n        .then(res=> {\n            history.push(`/login`)\n        })\n        .catch (err => {\n            console.error(err);\n        })\n}\n\nconsole.log(\"hola\");\n\n// login that makes a POST request to the auth/login route passing username and password,\n\nexport const login = (auth,history) => {\n    axios.post(`${base_url}/auth/login`, auth)\n        .then(res => {\n            localStorage.setItem(\"token\", res.data.token);\n            localStorage.setItem(\"user\", JSON.stringify(res.data.user));\n            history.push(`/profile/${res.data.user._id}`);\n        })\n        .catch(err => {\n            console.error(err);\n        })\n};\n\n\n\n// upload that makes a PATCH request to the auth/upload route passing the file,\n\nexport const update = (id, form) => {\n    let formData = new FormData();\n    Object.keys(form).forEach(key => {\n      formData.append(key, form[key])\n    });\n    axios.patch(`${base_url}/auth/upload/${id}`,formData,{\n        headers: {\n            \"Content-Type\" : \"multipart/form-data\"\n        }\n    })\n        .then(user => {\n            console.log(user);\n        })\n};\n\n\n\n\n\n// edit that makes a PATCH request to the auth/edit route passing username, campus and course,\nexport const edit = (user,auth,history) => {\n    axios.patch(`${base_url}/auth/edit/${user._id}`,auth)\n        .then(res=> {\n            history.push(`/profile/${user._id}`)\n        })\n        .catch (err => {\n            console.error(err);\n        })\n}\n\n\n\n// logout that makes a GET request to the auth/logout route to destroy user session,\n\nexport const logout = () => {\n    localStorage.removeItem(\"token\")\n}\n\n// loggedin that makes a GET request to the auth/loggedin route to check if a user is logged in.\n"]},"metadata":{},"sourceType":"module"}